{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kashi\\\\lostkk\\\\client\\\\src\\\\components\\\\Notification.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useSocket } from '../context/SocketContext';\nimport { XMarkIcon } from '@heroicons/react/24/outline';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Notification = () => {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  const socket = useSocket();\n  useEffect(() => {\n    if (!socket) return;\n    const handleNewNotification = notification => {\n      setNotifications(prev => [{\n        id: Date.now(),\n        message: notification.message,\n        type: notification.type || 'info',\n        itemName: notification.itemName,\n        timestamp: new Date()\n      }, ...prev].slice(0, 5)); // Keep only the last 5 notifications\n    };\n    socket.on('notification', handleNewNotification);\n    return () => {\n      socket.off('notification', handleNewNotification);\n    };\n  }, [socket]);\n  const removeNotification = id => {\n    setNotifications(prev => prev.filter(n => n.id !== id));\n  };\n  if (notifications.length === 0) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed bottom-4 right-4 z-50 space-y-2 w-80\",\n    children: notifications.map(notification => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `p-4 rounded-lg shadow-lg ${notification.type === 'success' ? 'bg-green-100 text-green-800 border border-green-200' : 'bg-blue-100 text-blue-800 border border-blue-200'}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-start\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-medium\",\n            children: notification.type === 'success' ? 'Item Found!' : 'New Update'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: notification.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), notification.itemName && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm mt-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-medium\",\n              children: \"Item:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }, this), \" \", notification.itemName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs opacity-70 mt-1\",\n            children: new Date(notification.timestamp).toLocaleTimeString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => removeNotification(notification.id),\n          className: \"text-gray-500 hover:text-gray-700\",\n          children: /*#__PURE__*/_jsxDEV(XMarkIcon, {\n            className: \"h-5 w-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)\n    }, notification.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Notification, \"vEY4JNkiU0bDmE1WUAY7kPZOZns=\", false, function () {\n  return [useSocket];\n});\n_c = Notification;\nexport default Notification;\nvar _c;\n$RefreshReg$(_c, \"Notification\");","map":{"version":3,"names":["useEffect","useState","useSocket","XMarkIcon","jsxDEV","_jsxDEV","Notification","_s","notifications","setNotifications","socket","handleNewNotification","notification","prev","id","Date","now","message","type","itemName","timestamp","slice","on","off","removeNotification","filter","n","length","className","children","map","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleTimeString","onClick","_c","$RefreshReg$"],"sources":["C:/Users/kashi/lostkk/client/src/components/Notification.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useSocket } from '../context/SocketContext';\nimport { XMarkIcon } from '@heroicons/react/24/outline';\n\nconst Notification = () => {\n  const [notifications, setNotifications] = useState([]);\n  const socket = useSocket();\n\n  useEffect(() => {\n    if (!socket) return;\n\n    const handleNewNotification = (notification) => {\n      setNotifications(prev => [\n        {\n          id: Date.now(),\n          message: notification.message,\n          type: notification.type || 'info',\n          itemName: notification.itemName,\n          timestamp: new Date()\n        },\n        ...prev\n      ].slice(0, 5)); // Keep only the last 5 notifications\n    };\n\n    socket.on('notification', handleNewNotification);\n\n    return () => {\n      socket.off('notification', handleNewNotification);\n    };\n  }, [socket]);\n\n  const removeNotification = (id) => {\n    setNotifications(prev => prev.filter(n => n.id !== id));\n  };\n\n  if (notifications.length === 0) return null;\n\n  return (\n    <div className=\"fixed bottom-4 right-4 z-50 space-y-2 w-80\">\n      {notifications.map((notification) => (\n        <div\n          key={notification.id}\n          className={`p-4 rounded-lg shadow-lg ${\n            notification.type === 'success' \n              ? 'bg-green-100 text-green-800 border border-green-200' \n              : 'bg-blue-100 text-blue-800 border border-blue-200'\n          }`}\n        >\n          <div className=\"flex justify-between items-start\">\n            <div>\n              <p className=\"font-medium\">\n                {notification.type === 'success' ? 'Item Found!' : 'New Update'}\n              </p>\n              <p>{notification.message}</p>\n              {notification.itemName && (\n                <p className=\"text-sm mt-1\">\n                  <span className=\"font-medium\">Item:</span> {notification.itemName}\n                </p>\n              )}\n              <p className=\"text-xs opacity-70 mt-1\">\n                {new Date(notification.timestamp).toLocaleTimeString()}\n              </p>\n            </div>\n            <button\n              onClick={() => removeNotification(notification.id)}\n              className=\"text-gray-500 hover:text-gray-700\"\n            >\n              <XMarkIcon className=\"h-5 w-5\" />\n            </button>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Notification;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}