{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kashi\\\\lostkk\\\\client\\\\src\\\\components\\\\ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children,\n  isAdminRoute = false\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const token = localStorage.getItem('token');\n  const user = JSON.parse(localStorage.getItem('user')) || {};\n  useEffect(() => {\n    if (isAdminRoute && !user.isAdmin) {\n      navigate('/my-reports', {\n        state: {\n          message: 'Unauthorized: Admin access required'\n        }\n      });\n    }\n  }, [isAdminRoute, user.isAdmin, navigate]);\n  if (!token) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  }\n  if (isAdminRoute && !user.isAdmin) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/my-reports\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this);\n  }\n  return children;\n};\n_s(ProtectedRoute, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","useNavigate","useEffect","jsxDEV","_jsxDEV","ProtectedRoute","children","isAdminRoute","_s","navigate","token","localStorage","getItem","user","JSON","parse","isAdmin","state","message","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/kashi/lostkk/client/src/components/ProtectedRoute.js"],"sourcesContent":["import React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport { useEffect } from 'react';\n\nconst ProtectedRoute = ({ children, isAdminRoute = false }) => {\n  const navigate = useNavigate();\n  const token = localStorage.getItem('token');\n  const user = JSON.parse(localStorage.getItem('user')) || {};\n\n  useEffect(() => {\n    if (isAdminRoute && !user.isAdmin) {\n      navigate('/my-reports', { \n        state: { \n          message: 'Unauthorized: Admin access required' \n        }\n      });\n    }\n  }, [isAdminRoute, user.isAdmin, navigate]);\n\n  if (!token) {\n    return <Navigate to=\"/login\" />;\n  }\n\n  if (isAdminRoute && !user.isAdmin) {\n    return <Navigate to=\"/my-reports\" />;\n  }\n\n  return children;\n};\n\nexport default ProtectedRoute;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,cAAc,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,YAAY,GAAG;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC7D,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACJ,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC;EAE3DV,SAAS,CAAC,MAAM;IACd,IAAIK,YAAY,IAAI,CAACM,IAAI,CAACG,OAAO,EAAE;MACjCP,QAAQ,CAAC,aAAa,EAAE;QACtBQ,KAAK,EAAE;UACLC,OAAO,EAAE;QACX;MACF,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACX,YAAY,EAAEM,IAAI,CAACG,OAAO,EAAEP,QAAQ,CAAC,CAAC;EAE1C,IAAI,CAACC,KAAK,EAAE;IACV,oBAAON,OAAA,CAACJ,QAAQ;MAACmB,EAAE,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACjC;EAEA,IAAIhB,YAAY,IAAI,CAACM,IAAI,CAACG,OAAO,EAAE;IACjC,oBAAOZ,OAAA,CAACJ,QAAQ;MAACmB,EAAE,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACtC;EAEA,OAAOjB,QAAQ;AACjB,CAAC;AAACE,EAAA,CAxBIH,cAAc;EAAA,QACDJ,WAAW;AAAA;AAAAuB,EAAA,GADxBnB,cAAc;AA0BpB,eAAeA,cAAc;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}